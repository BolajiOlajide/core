# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-08-18 12:22
from __future__ import unicode_literals

import common.mixins
import common.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hashid_field.field
import re
import uuid


def gen_uuid(apps, schema_editor):
    MenuItem = apps.get_model('timetables', 'MenuItem')
    for row in MenuItem.objects.all():
        row.public_id = uuid.uuid4()
        row.save()


def gen_num(apps, schema_editor):
    Course = apps.get_model('timetables', 'Course')
    for i, row in enumerate(Course.objects.all()):
        row.sequence_order = i + 1970
        row.save()


def populate_public_id_field(apps, schema_editor):
    Serving = apps.get_model('timetables', 'Serving')
    for row in Serving.objects.all():
        row.public_id = common.utils.timestamp_seconds()
        row.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(editable=False, max_length=150, null=True, unique=True)),
                ('sequence_order', models.PositiveSmallIntegerField(unique=True)),
            ],
            bases=(common.mixins.SlugifyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(editable=False, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Dishes',
            },
            bases=(common.mixins.SlugifyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('action', models.CharField(choices=[('no-meal', 'no meal will be served')], max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(editable=False, max_length=60, null=True, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            bases=(common.mixins.SlugifyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('cycle_day', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Course')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Dish')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Meal')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
            },
        ),
        migrations.CreateModel(
            name='Serving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('public_id', hashid_field.field.HashidField(alphabet='0123456789abcdefghijklmnopqrstuvwxyz', default=common.utils.timestamp_seconds, min_length=7, unique=True)),
                ('date_served', models.DateField()),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.MenuItem')),
            ],
        ),
        migrations.CreateModel(
            name='ServingAutoUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name': 'ServingAutoUpdate',
                'verbose_name_plural': 'ServingAutoUpdates',
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(editable=False, max_length=255, null=True, unique=True)),
                ('cycle_length', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ref_cycle_day', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ref_cycle_date', models.DateField()),
                ('inactive_weekdays', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(common.mixins.SlugifyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TimetableManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_super', models.BooleanField(default=False)),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Timetable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timetable Admin',
                'verbose_name_plural': 'Timetable Admins',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('info', models.TextField(blank=True)),
            ],
            bases=(common.mixins.SlugifyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VendorService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, default=None, null=True)),
                ('end_date', models.DateField(blank=True, default=None, null=True)),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Timetable')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Vendor')),
            ],
            options={
                'verbose_name': 'Vendor Service',
                'verbose_name_plural': 'Vendor Services',
            },
        ),
        migrations.AddField(
            model_name='timetable',
            name='admins',
            field=models.ManyToManyField(through='timetables.TimetableManagement', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='timetable',
            name='vendors',
            field=models.ManyToManyField(through='timetables.VendorService', to='timetables.Vendor'),
        ),
        migrations.AddField(
            model_name='servingautoupdate',
            name='timetable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Timetable'),
        ),
        migrations.AddField(
            model_name='servingautoupdate',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Vendor'),
        ),
        migrations.AddField(
            model_name='serving',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Vendor'),
        ),
        migrations.AddField(
            model_name='menuitem',
            name='timetable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Timetable'),
        ),
        migrations.AddField(
            model_name='event',
            name='timetable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetables.Timetable'),
        ),
        migrations.AlterUniqueTogether(
            name='vendorservice',
            unique_together=set([('timetable', 'vendor')]),
        ),
        migrations.AlterUniqueTogether(
            name='timetablemanagement',
            unique_together=set([('user', 'timetable')]),
        ),
        migrations.AlterUniqueTogether(
            name='servingautoupdate',
            unique_together=set([('timetable', 'vendor', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='serving',
            unique_together=set([('menu_item', 'vendor', 'date_served')]),
        ),
        migrations.AlterUniqueTogether(
            name='menuitem',
            unique_together=set([('timetable', 'cycle_day', 'meal', 'course', 'dish')]),
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together=set([('name', 'start_date', 'end_date')]),
        ),
        migrations.RunPython(gen_uuid, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(gen_num, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(populate_public_id_field, reverse_code=migrations.RunPython.noop),
    ]
